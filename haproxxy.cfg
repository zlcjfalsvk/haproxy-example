# Blog https://zlcjfalsvk.github.io/else/haproxy2/ 
global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        # stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        # default는 위의 값인데 servie 시작을 하지 못하여 추가해줌
        stats socket /home/pabii/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

        # ssl을 사용하기 위해선 설정을 해야한다. https://cbonte.github.io/haproxy-dconv/2.0/configuration.html#tune.ssl.default-dh-param
        tune.ssl.default-dh-param 2048

defaults
        log     global
        mode http
        option httplog
        option  dontlognull
        option httpclose
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

# Http 접근을 막기 위해 Redirection을 시켜줄 수 있다.
frontend httpRed
    bind *:80
    mode http
    redirect location https://testcash.pabii.co.kr code 301 if { hdr(host) -i testcash.pabii.co.kr }

# 파라미터 list: http://cbonte.github.io/haproxy-dconv/2.0/configuration.html#4.2

frontend Loadbalancer

    # ssl을 이용하기 위해선 PRIVATE Key와 CA & CHAIN을 합쳐서 만든 pem key가 필요하다.
    # `cat <개인키> <CA> <CHAIN or Bundle> > haproxy.pem`  으로 만들 수 있다.
    bind *:443    ssl crt /home/pabii/.ssl/haproxy.pem
    mode http # http://cbonte.github.io/haproxy-dconv/2.0/configuration.html#4-mode
    option httplog    

    # acl http://cbonte.github.io/haproxy-dconv/2.0/configuration.html#7
    acl cash_front  hdr(host)   -i testcash.pabii.co.kr
    acl fun_front   hdr(host)   -i testfun.pabii.co.kr

    acl login_path  path_beg  -i  /api/user/
    acl cash_path   path_beg  -i  /api/cash/
    acl data_path   path_beg  -i  /api/file/
    acl push_path   path_beg  -i  /api/push/

    use_backend cash            if cash_front cash_path
    use_backend cashData        if cash_front data_path
    use_backend cashPush        if cash_front push_path
    use_backend cashLogin       if cash_front login_path   

    use_backend fun             if fun_front

    default_backend  cashMiddle

listen DB
    bind *:3306
    mode tcp # http://cbonte.github.io/haproxy-dconv/2.0/configuration.html#4-mode
    option tcplog
    balance roundrobin

    server DB 10.10.10.3:3306 
    

backend cashLogin 
    balance roundrobin # http://cbonte.github.io/haproxy-dconv/2.0/configuration.html#4-balance
    server cashLogin 10.10.10.3:3310

backend cash
    balance roundrobin
    mode http    
    server cash 10.10.10.3:3330

backend cashData
    balance roundrobin
    mode http        
    server cashData 10.10.10.3:3320    

backend cashPush
    balance roundrobin
    mode http        
    server cashPush 10.10.10.3:3301

backend cashMiddle
    balance roundrobin
    mode http        
    server cashMiddle 10.10.10.3:3300

backend fun
    balance roundrobin
    mode http        
    server fun 10.10.10.3:6115          

listen stats # "stats"라는 이름으로 listen 지정
    bind :9000 # 접속 포트 지정
    stats enable
    stats realm Haproxy\ Statistics  # 브라우저 타이틀
    stats uri /haproxy_stats  # stat 를 제공할 URI
    stats auth Username:Password # 인증이 필요하면 추가한다
